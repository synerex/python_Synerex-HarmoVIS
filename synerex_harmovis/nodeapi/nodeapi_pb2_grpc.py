# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from synerex_harmvis.nodeapi import nodeapi_pb2 as nodeapi_dot_nodeapi__pb2


class NodeStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterNode = channel.unary_unary(
                '/nodeapi.Node/RegisterNode',
                request_serializer=nodeapi_dot_nodeapi__pb2.NodeInfo.SerializeToString,
                response_deserializer=nodeapi_dot_nodeapi__pb2.NodeID.FromString,
                )
        self.QueryNode = channel.unary_unary(
                '/nodeapi.Node/QueryNode',
                request_serializer=nodeapi_dot_nodeapi__pb2.NodeID.SerializeToString,
                response_deserializer=nodeapi_dot_nodeapi__pb2.NodeInfo.FromString,
                )
        self.KeepAlive = channel.unary_unary(
                '/nodeapi.Node/KeepAlive',
                request_serializer=nodeapi_dot_nodeapi__pb2.NodeUpdate.SerializeToString,
                response_deserializer=nodeapi_dot_nodeapi__pb2.Response.FromString,
                )
        self.UnRegisterNode = channel.unary_unary(
                '/nodeapi.Node/UnRegisterNode',
                request_serializer=nodeapi_dot_nodeapi__pb2.NodeID.SerializeToString,
                response_deserializer=nodeapi_dot_nodeapi__pb2.Response.FromString,
                )


class NodeServicer(object):
    """Missing associated documentation comment in .proto file"""

    def RegisterNode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryNode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeepAlive(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnRegisterNode(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterNode,
                    request_deserializer=nodeapi_dot_nodeapi__pb2.NodeInfo.FromString,
                    response_serializer=nodeapi_dot_nodeapi__pb2.NodeID.SerializeToString,
            ),
            'QueryNode': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryNode,
                    request_deserializer=nodeapi_dot_nodeapi__pb2.NodeID.FromString,
                    response_serializer=nodeapi_dot_nodeapi__pb2.NodeInfo.SerializeToString,
            ),
            'KeepAlive': grpc.unary_unary_rpc_method_handler(
                    servicer.KeepAlive,
                    request_deserializer=nodeapi_dot_nodeapi__pb2.NodeUpdate.FromString,
                    response_serializer=nodeapi_dot_nodeapi__pb2.Response.SerializeToString,
            ),
            'UnRegisterNode': grpc.unary_unary_rpc_method_handler(
                    servicer.UnRegisterNode,
                    request_deserializer=nodeapi_dot_nodeapi__pb2.NodeID.FromString,
                    response_serializer=nodeapi_dot_nodeapi__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nodeapi.Node', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Node(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def RegisterNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nodeapi.Node/RegisterNode',
            nodeapi_dot_nodeapi__pb2.NodeInfo.SerializeToString,
            nodeapi_dot_nodeapi__pb2.NodeID.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nodeapi.Node/QueryNode',
            nodeapi_dot_nodeapi__pb2.NodeID.SerializeToString,
            nodeapi_dot_nodeapi__pb2.NodeInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeepAlive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nodeapi.Node/KeepAlive',
            nodeapi_dot_nodeapi__pb2.NodeUpdate.SerializeToString,
            nodeapi_dot_nodeapi__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnRegisterNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nodeapi.Node/UnRegisterNode',
            nodeapi_dot_nodeapi__pb2.NodeID.SerializeToString,
            nodeapi_dot_nodeapi__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
